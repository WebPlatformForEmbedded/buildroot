diff -Naur cobalt.orig/src/third_party/starboard/wpe/shared/libraries.gypi cobalt/src/third_party/starboard/wpe/shared/libraries.gypi
--- cobalt.orig/src/third_party/starboard/wpe/shared/libraries.gypi	2022-12-09 01:16:39.007221363 +0530
+++ cobalt/src/third_party/starboard/wpe/shared/libraries.gypi	2022-12-09 01:19:06.038655958 +0530
@@ -24,7 +24,6 @@
       'WPEFrameworkDefinitions',
       'WPEFrameworkPlugins',
       'compositorclient',
-      'deviceinfo',
       'gstreamer-1.0',
       'gstreamer-app-1.0',
       'gstreamer-base-1.0',
diff -Naur cobalt.orig/src/third_party/starboard/wpe/shared/system/system_get_property.cc cobalt/src/third_party/starboard/wpe/shared/system/system_get_property.cc
--- cobalt.orig/src/third_party/starboard/wpe/shared/system/system_get_property.cc	2022-12-09 01:16:03.050439444 +0530
+++ cobalt/src/third_party/starboard/wpe/shared/system/system_get_property.cc	2022-12-09 01:21:03.151080944 +0530
@@ -47,49 +47,25 @@
       }
     }
     case kSbSystemPropertyChipsetModelNumber: {
-      char property_name[128];
-      uint8_t property_length = sizeof(property_name);
-      std::memset(property_name, 0, property_length);
-      uint32_t ret = deviceinfo_chipset(property_name, &property_length);
-      if ((ret == 0) && (property_length > 0)) {
-        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
-      } else {
+      {
         return CopyStringAndTestIfSuccess(out_value, value_length,
             SB_PLATFORM_CHIPSET_MODEL_NUMBER_STRING);
       }
     }
     case kSbSystemPropertyFirmwareVersion: {
-      char property_name[128];
-      uint8_t property_length = sizeof(property_name);
-      std::memset(property_name, 0, property_length);
-      uint32_t ret = deviceinfo_firmware_version(property_name, &property_length);
-      if ((ret == 0) && (property_length > 0)) {
-        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
-      } else {
+      {
         return CopyStringAndTestIfSuccess(out_value, value_length,
             SB_PLATFORM_FIRMWARE_VERSION_STRING);
       }
     }
     case kSbSystemPropertyModelName: {
-      char property_name[128];
-      uint8_t property_length = sizeof(property_name);
-      std::memset(property_name, 0, property_length);
-      uint32_t ret = deviceinfo_model_name(property_name, &property_length);
-      if ((ret == 0) && (property_length > 0)) {
-        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
-      } else {
+      {
         return CopyStringAndTestIfSuccess(out_value, value_length,
             SB_PLATFORM_MODEL_NAME);
       }
     }
     case kSbSystemPropertyModelYear: {
-      char property_name[128];
-      uint8_t property_length = sizeof(property_name);
-      std::memset(property_name, 0, property_length);
-      uint32_t ret = deviceinfo_model_year(property_name, &property_length);
-      if ((ret == 0) && (property_length > 0)) {
-        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
-      } else {
+      {
         return CopyStringAndTestIfSuccess(out_value, value_length,
             std::to_string(SB_PLATFORM_MODEL_YEAR).c_str());
       }
@@ -102,13 +78,7 @@
     case kSbSystemPropertyNetworkOperatorName:
 #endif
     {
-      char property_name[128];
-      uint8_t property_length = sizeof(property_name);
-      std::memset(property_name, 0, property_length);
-      uint32_t ret = deviceinfo_system_integrator_name(property_name, &property_length);
-      if ((ret == 0) && (property_length > 0)) {
-        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
-      } else {
+      {
         return CopyStringAndTestIfSuccess(out_value, value_length,
             SB_PLATFORM_MANUFACTURER_NAME);
       }
@@ -117,25 +87,13 @@
       return false;
 
     case kSbSystemPropertyFriendlyName: {
-      char property_name[128];
-      uint8_t property_length = sizeof(property_name);
-      std::memset(property_name, 0, property_length);
-      uint32_t ret = deviceinfo_friendly_name(property_name, &property_length);
-      if ((ret == 0) && (property_length > 0)) {
-        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
-      } else {
+      {
         return CopyStringAndTestIfSuccess(out_value, value_length,
             SB_PLATFORM_FRIENDLY_NAME);
       }
     }
     case kSbSystemPropertyPlatformName: {
-      char property_name[128];
-      uint8_t property_length = sizeof(property_name);
-      std::memset(property_name, 0, property_length);
-      uint32_t ret = deviceinfo_platform_name(property_name, &property_length);
-      if ((ret == 0) && (property_length > 0)) {
-        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
-      } else {
+      {
         return CopyStringAndTestIfSuccess(out_value, value_length, kPlatformName);
       }
     }
@@ -201,5 +159,4 @@
 }
 
 void DisposePropertyInfo() {
-    deviceinfo_dispose();
 }
diff -Naur cobalt.orig/src/third_party/starboard/wpe/shared/system/system_get_property.h cobalt/src/third_party/starboard/wpe/shared/system/system_get_property.h
--- cobalt.orig/src/third_party/starboard/wpe/shared/system/system_get_property.h	2022-12-09 01:16:03.050439444 +0530
+++ cobalt/src/third_party/starboard/wpe/shared/system/system_get_property.h	2022-12-09 01:19:16.005798307 +0530
@@ -22,7 +22,6 @@
 #endif
 
 #include <cstring>
-#include <deviceinfo/deviceinfo.h>
 
 void DisposePropertyInfo();
 

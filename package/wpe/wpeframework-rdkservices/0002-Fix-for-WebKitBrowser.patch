diff -Naur rdkservices.orig/WebKitBrowser/Apps.config rdkservices/WebKitBrowser/Apps.config
--- rdkservices.orig/WebKitBrowser/Apps.config	2022-12-13 00:07:04.628479666 +0530
+++ rdkservices/WebKitBrowser/Apps.config	2022-12-13 00:15:34.243095935 +0530
@@ -11,7 +11,6 @@
 map()
     kv(url "about:blank")
     if(PLUGIN_APPS_USERAGENT)
-        semicolon_safe_string(PLUGIN_APPS_USERAGENT)
         kv(useragent ${PLUGIN_APPS_USERAGENT})
     endif()
     if(NOT WEBKIT_GLIB_API)
diff -Naur rdkservices.orig/WebKitBrowser/UX.config rdkservices/WebKitBrowser/UX.config
--- rdkservices.orig/WebKitBrowser/UX.config	2022-12-13 00:07:04.628479666 +0530
+++ rdkservices/WebKitBrowser/UX.config	2022-12-13 00:19:46.559177475 +0530
@@ -17,7 +17,6 @@
 map()
     kv(url "about:blank")
     if(PLUGIN_UX_USERAGENT)
-        semicolon_safe_string(PLUGIN_UX_USERAGENT)
         kv(useragent ${PLUGIN_UX_USERAGENT})
     endif()
     if(NOT WEBKIT_GLIB_API)
diff -Naur rdkservices.orig/WebKitBrowser/WebKitBrowser.config rdkservices/WebKitBrowser/WebKitBrowser.config
--- rdkservices.orig/WebKitBrowser/WebKitBrowser.config	2022-12-13 00:07:04.628479666 +0530
+++ rdkservices/WebKitBrowser/WebKitBrowser.config	2022-12-13 00:10:03.991724101 +0530
@@ -26,7 +26,6 @@
 map()
     kv(url ${PLUGIN_WEBKITBROWSER_STARTURL})
     if(PLUGIN_WEBKITBROWSER_USERAGENT)
-        semicolon_safe_string(PLUGIN_WEBKITBROWSER_USERAGENT)
         kv(useragent ${PLUGIN_WEBKITBROWSER_USERAGENT})
     endif()
     if(NOT WEBKIT_GLIB_API)
diff -Naur rdkservices.orig/WebKitBrowser/WebKitImplementation.cpp rdkservices/WebKitBrowser/WebKitImplementation.cpp
--- rdkservices.orig/WebKitBrowser/WebKitImplementation.cpp	2022-12-13 00:07:04.628479666 +0530
+++ rdkservices/WebKitBrowser/WebKitImplementation.cpp	2022-12-13 00:30:33.970833089 +0530
@@ -2329,7 +2329,9 @@
               webkit_settings_set_enable_spatial_navigation(preferences, _config.SpatialNavigation.Value());
               webkit_settings_set_enable_tabs_to_links(preferences, _config.SpatialNavigation.Value());
             }
+#if 0
             webkit_settings_set_allow_scripts_to_close_windows(preferences, _config.AllowWindowClose.Value());
+#endif
             webkit_settings_set_enable_non_composited_webgl(preferences, _config.NonCompositedWebGLEnabled.Value());
 
             // Media Content Types Requiring Hardware Support
@@ -2712,6 +2714,7 @@
 
         void CheckWebProcess()
         {
+#if 0
             if ( _webProcessCheckInProgress )
                 return;
 
@@ -2736,10 +2739,12 @@
                     object->DidReceiveWebProcessResponsivenessReply(isWebProcessResponsive);
                 });
 #endif
+#endif
         }
 
         void DidReceiveWebProcessResponsivenessReply(bool isWebProcessResponsive)
         {
+#if 0
             if (_config.WatchDogHangThresholdInSeconds.Value() == 0 || _config.WatchDogCheckTimeoutInSeconds.Value() == 0)
                 return;
 
@@ -2802,11 +2807,13 @@
             } else if (_unresponsiveReplyNum == (2 * kWebProcessUnresponsiveReplyDefaultLimit)) {
                 DeactivateBrowser(PluginHost::IShell::WATCHDOG_EXPIRED);
             }
+#endif
         }
 
 #ifdef WEBKIT_GLIB_API
         static void isWebProcessResponsiveCallback(WebKitWebView*, GParamSpec*, WebKitImplementation* self)
         {
+#if 0
             if (webkit_web_view_get_is_web_process_responsive(self->_view) == true) {
 
                 if (self->_unresponsiveReplyNum > 0) {
@@ -2817,6 +2824,7 @@
                     self->_unresponsiveReplyNum = 0;
                 }
             }
+#endif
         }
 #else
         static void WebProcessDidBecomeResponsive(WKPageRef page, const void* clientInfo)

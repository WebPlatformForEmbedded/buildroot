diff -Naur OCDM-Widevine-Nexus-SVP.gerrit.orig/cmake/FindNEXUS.cmake OCDM-Widevine-Nexus-SVP.gerrit/cmake/FindNEXUS.cmake
--- OCDM-Widevine-Nexus-SVP.gerrit.orig/cmake/FindNEXUS.cmake	1970-01-01 05:30:00.000000000 +0530
+++ OCDM-Widevine-Nexus-SVP.gerrit/cmake/FindNEXUS.cmake	2022-12-08 23:30:23.462063943 +0530
@@ -0,0 +1,83 @@
+# - Try to find Broadcom Nexus.
+# Once done this will define
+#  NEXUS_FOUND  - System has Nexus
+#  NEXUS::NEXUS - The Nexus library
+#
+# Copyright (C) 2019 Metrological B.V
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+# 1.  Redistributions of source code must retain the above copyright
+#     notice, this list of conditions and the following disclaimer.
+# 2.  Redistributions in binary form must reproduce the above copyright
+#     notice, this list of conditions and the following disclaimer in the
+#     documentation and/or other materials provided with the distribution.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS
+# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
+# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS
+# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
+# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
+# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
+# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+find_path(LIBNEXUS_INCLUDE nexus_config.h
+        PATH_SUFFIXES refsw)
+
+find_library(LIBNEXUS_LIBRARY nexus)
+
+if(EXISTS "${LIBNEXUS_LIBRARY}")
+    set(NEXUS_FOUND TRUE)
+    
+    find_library(LIBB_OS_LIBRARY b_os)
+
+    find_library(LIBNEXUS_CLIENT_LIBRARY nexus_client)
+
+    find_library(LIBNXCLIENT_LIBRARY nxclient)
+
+    include(FindPackageHandleStandardArgs)
+
+    find_package_handle_standard_args(LIBNEXUS DEFAULT_MSG LIBNEXUS_INCLUDE LIBNEXUS_LIBRARY)
+
+    mark_as_advanced(LIBNEXUS_INCLUDE LIBNEXUS_LIBRARY)
+
+    if(NOT TARGET NEXUS::NEXUS)
+        add_library(NEXUS::NEXUS UNKNOWN IMPORTED)
+        set_target_properties(NEXUS::NEXUS PROPERTIES
+                IMPORTED_LINK_INTERFACE_LANGUAGES "C"
+                INTERFACE_INCLUDE_DIRECTORIES "${LIBNEXUS_INCLUDE}"
+                    )
+
+        if(NOT EXISTS "${LIBNEXUS_CLIENT_LIBRARY}")
+            message(STATUS "Nexus in Proxy mode")
+            set_target_properties(NEXUS::NEXUS PROPERTIES
+                    IMPORTED_LOCATION "${LIBNEXUS_LIBRARY}"
+                    )
+        else()
+            message(STATUS "Nexus in Client mode")
+            set_target_properties(NEXUS::NEXUS PROPERTIES
+                    IMPORTED_LOCATION "${LIBNEXUS_CLIENT_LIBRARY}"
+                    )
+        endif()
+
+        if(NOT EXISTS "${LIBNXCLIENT_LIBRARY}")
+            set_target_properties(NEXUS::NEXUS PROPERTIES
+                    INTERFACE_COMPILE_DEFINITIONS NO_NXCLIENT
+                    )
+        endif()
+
+        if(EXISTS "${LIBB_OS_LIBRARY}")
+            set_target_properties(NEXUS::NEXUS PROPERTIES
+                    IMPORTED_LINK_INTERFACE_LIBRARIES "${LIBB_OS_LIBRARY}"
+                    )
+        endif()
+    endif()
+    set_target_properties(NEXUS::NEXUS PROPERTIES
+            INTERFACE_COMPILE_DEFINITIONS "PLATFORM_BRCM"
+            )
+endif()
diff -Naur OCDM-Widevine-Nexus-SVP.gerrit.orig/cmake/FindNXCLIENT.cmake OCDM-Widevine-Nexus-SVP.gerrit/cmake/FindNXCLIENT.cmake
--- OCDM-Widevine-Nexus-SVP.gerrit.orig/cmake/FindNXCLIENT.cmake	1970-01-01 05:30:00.000000000 +0530
+++ OCDM-Widevine-Nexus-SVP.gerrit/cmake/FindNXCLIENT.cmake	2022-12-08 23:30:37.593794798 +0530
@@ -0,0 +1,51 @@
+# - Try to find Broadcom Nexus client.
+# Once done this will define
+#  NXCLIENT_FOUND     - System has a Nexus client
+#  NXCLIENT::NXCLIENT - The Nexus client library
+#
+# Copyright (C) 2019 Metrological B.V
+#
+# Redistribution and use in source and binary forms, with or without
+# modification, are permitted provided that the following conditions
+# are met:
+# 1.  Redistributions of source code must retain the above copyright
+#     notice, this list of conditions and the following disclaimer.
+# 2.  Redistributions in binary form must reproduce the above copyright
+#     notice, this list of conditions and the following disclaimer in the
+#     documentation and/or other materials provided with the distribution.
+#
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS
+# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
+# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS
+# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
+# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
+# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
+# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+find_path(LIBNXCLIENT_INCLUDE nexus_config.h
+        PATH_SUFFIXES refsw)
+
+find_library(LIBNXCLIENT_LIBRARY nxclient)
+
+if(EXISTS "${LIBNXCLIENT_LIBRARY}")
+    include(FindPackageHandleStandardArgs)
+
+    set(NXCLIENT_FOUND TRUE)
+
+    find_package_handle_standard_args(LIBNXCLIENT DEFAULT_MSG NXCLIENT_FOUND LIBNXCLIENT_INCLUDE LIBNXCLIENT_LIBRARY)
+    mark_as_advanced(LIBNXCLIENT_LIBRARY)
+
+    if(NOT TARGET NXCLIENT::NXCLIENT)
+        add_library(NXCLIENT::NXCLIENT UNKNOWN IMPORTED)
+        
+        set_target_properties(NXCLIENT::NXCLIENT PROPERTIES
+                IMPORTED_LINK_INTERFACE_LANGUAGES "C"
+                IMPORTED_LOCATION "${LIBNXCLIENT_LIBRARY}"
+                INTERFACE_INCLUDE_DIRECTORIES "${LIBNXCLIENT_INCLUDE}"
+                )
+    endif()
+endif()
\ No newline at end of file
diff -Naur OCDM-Widevine-Nexus-SVP.gerrit.orig/CMakeLists.txt OCDM-Widevine-Nexus-SVP.gerrit/CMakeLists.txt
--- OCDM-Widevine-Nexus-SVP.gerrit.orig/CMakeLists.txt	2022-12-08 22:01:32.443475291 +0530
+++ OCDM-Widevine-Nexus-SVP.gerrit/CMakeLists.txt	2022-12-08 22:54:51.932919364 +0530
@@ -58,6 +58,7 @@
 find_package(NexusWidevine)
 
 add_library(${DRM_PLUGIN_NAME} SHARED
+    Module.cpp
     HostImplementation.cpp 
     MediaSession.cpp 
     MediaSystem.cpp
diff -Naur OCDM-Widevine-Nexus-SVP.gerrit.orig/HostImplementation.h OCDM-Widevine-Nexus-SVP.gerrit/HostImplementation.h
--- OCDM-Widevine-Nexus-SVP.gerrit.orig/HostImplementation.h	2022-12-08 22:01:32.443475291 +0530
+++ OCDM-Widevine-Nexus-SVP.gerrit/HostImplementation.h	2022-12-08 22:49:25.423411074 +0530
@@ -46,9 +46,9 @@
 #ifndef WIDEVINE_HOST_IMPLEMENTATION_H
 #define WIDEVINE_HOST_IMPLEMENTATION_H
 
-#include "cdm.h"
+#include "Module.h"
 
-#include <core/core.h>
+#include "cdm.h"
 
 namespace CDMi {
 
diff -Naur OCDM-Widevine-Nexus-SVP.gerrit.orig/MediaSession.cpp OCDM-Widevine-Nexus-SVP.gerrit/MediaSession.cpp
--- OCDM-Widevine-Nexus-SVP.gerrit.orig/MediaSession.cpp	2022-12-08 22:01:32.443475291 +0530
+++ OCDM-Widevine-Nexus-SVP.gerrit/MediaSession.cpp	2022-12-08 22:54:03.500706269 +0530
@@ -43,6 +43,8 @@
  ###############################################################################
  */
 
+#include "Module.h"
+
 #include "MediaSession.h"
 #include "Policy.h"
 
@@ -55,8 +57,6 @@
 #include <string.h>
 #include <sys/utsname.h>
 
-#include <core/core.h>
-
 #define NYI_KEYSYSTEM "keysystem-placeholder"
 
 #include <nexus_memory.h>
@@ -327,11 +327,11 @@
 CDMi_RESULT MediaKeySession::Decrypt(
     const uint8_t *f_pbSessionKey,
     uint32_t f_cbSessionKey,
-    const uint32_t *f_pdwSubSampleMapping,
-    uint32_t f_cdwSubSampleMapping,
+    const EncryptionScheme encryptionScheme,
+    const EncryptionPattern& pattern,
     const uint8_t *f_pbIV,
     uint32_t f_cbIV,
-    const uint8_t *f_pbData,
+    uint8_t *f_pbData,
     uint32_t f_cbData,
     uint32_t *f_pcbOpaqueClearContent,
     uint8_t **f_ppbOpaqueClearContent,
@@ -404,9 +404,53 @@
   ::memcpy(m_pNexusMemory, f_pbData, f_cbData);
 
   if (widevine::Cdm::kSuccess == m_cdm->getKeyStatuses(m_sessionId, &map)) {
+
     widevine::Cdm::KeyStatusMap::iterator it = map.begin();
     // FIXME: We just check the first key? How do we know that's the Widevine key and not, say, a PlayReady one?
     if (widevine::Cdm::kUsable == it->second) {
+
+#if defined (USE_CENC16)
+
+      widevine::Cdm::Subsample subsample;
+      subsample.protected_bytes = f_cbData;
+
+
+      widevine::Cdm::Sample sample;
+      sample.input.data = reinterpret_cast<uint8_t*>(m_pNexusMemory);
+      sample.input.data_length = f_cbData;
+      sample.input.subsamples = &subsample;
+      sample.input.subsamples_length = 1;
+      sample.input.iv = m_IV;
+      sample.input.iv_length = sizeof(m_IV);
+
+      sample.output.data = reinterpret_cast<uint8_t*>(pOpaqueData);
+      sample.output.data_length = f_cbData;
+      sample.output.data_offset = 0;
+
+
+      widevine::Cdm::DecryptionBatch batch;
+      batch.samples = &sample;
+      batch.samples_length = 1;
+      batch.key_id = keyId;
+      batch.key_id_length = keyIdLength;
+      batch.is_secure = true;
+      batch.encryption_scheme = widevine::Cdm::kAesCtr;
+      batch.is_video = true;
+
+
+      uint8_t crypto_byte_block = 0;
+      uint8_t skip_byte_block = 0;
+      widevine::Cdm::Pattern pattern(crypto_byte_block, skip_byte_block);
+      batch.pattern = pattern;
+
+
+      if (widevine::Cdm::kSuccess == m_cdm->decrypt(batch)) {
+        status = CDMi_SUCCESS;
+      } else {
+        printf("CDM decrypt failed!\n");
+      }
+#else
+
       widevine::Cdm::OutputBuffer output;
       output.data = reinterpret_cast<uint8_t*>(pOpaqueData);
       output.data_length = f_cbData;
@@ -419,8 +463,22 @@
       input.key_id_length = keyIdLength;
       input.iv = m_IV;
       input.iv_length = sizeof(m_IV);
+      input.pattern.encrypted_blocks = pattern.encrypted_blocks;
+      input.pattern.clear_blocks = pattern.clear_blocks;
+      switch (encryptionScheme) {
+          case AesCtr_Cenc:
+          case AesCtr_Cens:
+              input.encryption_scheme = widevine::Cdm::kAesCtr;
+              break;
+          case AesCbc_Cbc1:
+          case AesCbc_Cbcs:
+              input.encryption_scheme = widevine::Cdm::kAesCbc;
+              break;
+          default:
+              input.encryption_scheme = widevine::Cdm::kClear;
+              break;
+      }
 
-      input.encryption_scheme = widevine::Cdm::kAesCtr;
       input.is_video = true;
       input.block_offset = 0;
       for (int ii = 15, counter = 0; ii >= 12; ii--, counter = counter >> 8) {
@@ -434,12 +492,14 @@
       } else {
         printf("CDM decrypt failed!\n");
       }
+#endif
     }
   }
 
-  // Return clear content.
+  //Copy and Return the Memory token in the incoming payload buffer.
   *f_pcbOpaqueClearContent = sizeof(m_TokenHandle);
-  *f_ppbOpaqueClearContent = reinterpret_cast<uint8_t*>(&m_TokenHandle);
+  *f_ppbOpaqueClearContent = f_pbData;
+  memcpy(*f_ppbOpaqueClearContent,reinterpret_cast<uint8_t*>(&m_TokenHandle),sizeof(m_TokenHandle));
 
   NEXUS_MemoryBlock_Unlock(pNexusMemoryBlock);
   NEXUS_MemoryBlock_Free(pNexusMemoryBlock);
diff -Naur OCDM-Widevine-Nexus-SVP.gerrit.orig/MediaSession.h OCDM-Widevine-Nexus-SVP.gerrit/MediaSession.h
--- OCDM-Widevine-Nexus-SVP.gerrit.orig/MediaSession.h	2022-12-08 22:01:32.443475291 +0530
+++ OCDM-Widevine-Nexus-SVP.gerrit/MediaSession.h	2022-12-08 22:50:44.563794253 +0530
@@ -45,8 +45,9 @@
 
 #pragma once
 
+#include <interfaces/IDRM.h>
+
 #include <cdm.h>
-#include <cdmi.h>
 
 #include <nexus_memory.h>
 
@@ -88,11 +89,11 @@
     virtual CDMi_RESULT Decrypt(
         const uint8_t *f_pbSessionKey,
         uint32_t f_cbSessionKey,
-        const uint32_t *f_pdwSubSampleMapping,
-        uint32_t f_cdwSubSampleMapping,
+        const EncryptionScheme encryptionScheme,
+        const EncryptionPattern& pattern,
         const uint8_t *f_pbIV,
         uint32_t f_cbIV,
-        const uint8_t *f_pbData,
+        uint8_t *f_pbData,
         uint32_t f_cbData,
         uint32_t *f_pcbOpaqueClearContent,
         uint8_t **f_ppbOpaqueClearContent,
diff -Naur OCDM-Widevine-Nexus-SVP.gerrit.orig/MediaSystem.cpp OCDM-Widevine-Nexus-SVP.gerrit/MediaSystem.cpp
--- OCDM-Widevine-Nexus-SVP.gerrit.orig/MediaSystem.cpp	2022-12-08 22:01:32.443475291 +0530
+++ OCDM-Widevine-Nexus-SVP.gerrit/MediaSystem.cpp	2022-12-08 22:52:07.184180993 +0530
@@ -43,6 +43,7 @@
  ###############################################################################
  */
 
+#include "Module.h"
 #include "MediaSession.h"
 #include "HostImplementation.h"
 
@@ -50,7 +51,6 @@
 #include <iostream>
 #include <sstream>
 #include <sys/utsname.h>
-#include <core/core.h>
 
 #include <nexus_config.h>
 #include <nxclient.h>
@@ -242,7 +242,7 @@
 
         std::string serverCertificate(reinterpret_cast<const char*>(f_pbServerCertificate), f_cbServerCertificate);
 
-#ifdef USE_CENC15
+#if defined (USE_CENC15) || defined (USE_CENC16)
         if (widevine::Cdm::kSuccess == _cdm->setServiceCertificate(widevine::Cdm::ServiceRole::kAllServices, serverCertificate)) {
             dr = CDMi_SUCCESS;
         }
@@ -290,7 +290,7 @@
         _adminLock.Unlock();
     }
 
-#if defined (USE_CENC14) || defined (USE_CENC15)
+#if defined (USE_CENC14) || defined (USE_CENC15) || defined (USE_CENC16)
     void onKeyStatusesChange(const std::string& session_id,  bool has_new_usable_key) override
 #else
     void onKeyStatusesChange(const std::string& session_id) override
@@ -317,6 +317,7 @@
         _adminLock.Unlock();
     }
 
+#if !defined (USE_CENC16)
     // Called when a deferred action has completed.
     void onDeferredComplete(const std::string& session_id, widevine::Cdm::Status result) override {
 
@@ -328,6 +329,7 @@
 
         _adminLock.Unlock();
     }
+#endif
 
     // Called when the CDM requires a new device certificate
     virtual void onDirectIndividualizationRequest(const std::string& session_id, const std::string& request) {
diff -Naur OCDM-Widevine-Nexus-SVP.gerrit.orig/Module.cpp OCDM-Widevine-Nexus-SVP.gerrit/Module.cpp
--- OCDM-Widevine-Nexus-SVP.gerrit.orig/Module.cpp	1970-01-01 05:30:00.000000000 +0530
+++ OCDM-Widevine-Nexus-SVP.gerrit/Module.cpp	2022-12-08 22:48:08.997591527 +0530
@@ -0,0 +1,23 @@
+/*
+ * If not stated otherwise in this file or this component's LICENSE file the
+ * following copyright and licenses apply:
+ *
+ * Copyright 2021 RDK Management
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include "Module.h"
+
+MODULE_NAME_DECLARATION(BUILD_REFERENCE)
+
diff -Naur OCDM-Widevine-Nexus-SVP.gerrit.orig/Module.h OCDM-Widevine-Nexus-SVP.gerrit/Module.h
--- OCDM-Widevine-Nexus-SVP.gerrit.orig/Module.h	1970-01-01 05:30:00.000000000 +0530
+++ OCDM-Widevine-Nexus-SVP.gerrit/Module.h	2022-12-08 22:48:08.997591527 +0530
@@ -0,0 +1,28 @@
+/*
+ * If not stated otherwise in this file or this component's LICENSE file the
+ * following copyright and licenses apply:
+ *
+ * Copyright 2021 RDK Management
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+#pragma once
+
+#ifndef MODULE_NAME
+#define MODULE_NAME OCDM_Widevine
+#endif
+
+#include <com/com.h>
+#include <core/core.h>
+#include <tracing/tracing.h>
+#include <websocket/websocket.h>

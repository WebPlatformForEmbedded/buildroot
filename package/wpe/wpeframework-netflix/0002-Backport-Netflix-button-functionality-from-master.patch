From b356ce11e68fbec00f0c01ef554d0acfe35e0106 Mon Sep 17 00:00:00 2001
From: "k.plata" <k.plata@metrological.com>
Date: Tue, 7 Dec 2021 14:21:43 +0100
Subject: [PATCH] Backport Netflix button functionality from master

---
 Netflix.config            |  8 ++++++++
 NetflixImplementation.cpp | 21 ++++++++++++++++++++-
 2 files changed, 28 insertions(+), 1 deletion(-)

diff --git a/Netflix.config b/Netflix.config
index 3a96197..6d69135 100644
--- a/Netflix.config
+++ b/Netflix.config
@@ -71,6 +71,14 @@ map()
   if (PLUGIN_NETFLIX_DEVICE_KEYS)
     kv(devicekeys ${PLUGIN_NETFLIX_DEVICE_KEYS})
   endif()
+  if (PLUGIN_NETFLIX_HAS_NETFLIX_BUTTON)
+    kv(hasnetflixbutton true)
+  else ()
+    kv(hasnetflixbutton false)
+  endif()
+  if (PLUGIN_NETFLIX_KEYCODE_NETFLIX)
+    kv(keycodenetflix ${PLUGIN_NETFLIX_KEYCODE_NETFLIX})
+  endif()
   if (PLUGIN_NETFLIX_IID_SUPPORT)
   key(iids)
   map()
diff --git a/NetflixImplementation.cpp b/NetflixImplementation.cpp
index 0dd6dce..6bf6d56 100644
--- a/NetflixImplementation.cpp
+++ b/NetflixImplementation.cpp
@@ -294,6 +294,8 @@ namespace Plugin {
                 , MaxSupportedHDCP(22)
                 , JavaScriptMemory(142606336)
                 , NetflixVersion(_T(""))
+                , HasNetflixButton(false)
+                , KeyCodeNetflix()
 #ifdef SUPPORTS_IID
                 , iids()
 #endif
@@ -339,6 +341,8 @@ namespace Plugin {
                 Add(_T("maxsupportedhdcp"), &MaxSupportedHDCP);
                 Add(_T("javascriptmemory"), &JavaScriptMemory);
                 Add(_T("netflixversion"), &NetflixVersion);
+                Add(_T("hasnetflixbutton"), &HasNetflixButton);
+                Add(_T("keycodenetflix"), &KeyCodeNetflix);
 #ifdef SUPPORTS_IID
                 Add(_T("iids"), &iids);
 #endif
@@ -389,6 +393,8 @@ namespace Plugin {
             Core::JSON::DecUInt8 MaxSupportedHDCP;
             Core::JSON::DecUInt32 JavaScriptMemory;
             Core::JSON::String NetflixVersion;
+            Core::JSON::DecUInt16 KeyCodeNetflix;
+            Core::JSON::Boolean HasNetflixButton;
 #ifdef SUPPORTS_IID
             IIDConfig iids;
 #endif
@@ -606,6 +612,10 @@ namespace Plugin {
             if (_config.DeviceKeys.IsSet() == true){
                Core::SystemInfo::SetEnvironment(_T("NETFLIX_VAULT"), _config.DeviceKeys.Value(), false);
             }
+            if ((_config.KeyCodeNetflix.IsSet() == true)) {
+                Core::SystemInfo::SetEnvironment(_T("NF_DPI_KEYCODE_NETFLIX"), Core::ToString(_config.KeyCodeNetflix.Value()), false);
+            }
+
             Core::SystemInfo::SetEnvironment(_T("NF_FPS_TARGET"), Core::NumberType<uint8_t>(_config.FPS.Value()).Text(), false);
             Core::SystemInfo::SetEnvironment(_T("NF_MEDIA_CACHE_CAPACITY"), Core::NumberType<uint32_t>(_config.MediaCache.Value()).Text(), false);
             Core::SystemInfo::SetEnvironment(_T("NF_RESOURCE_CACHE_CAPACITY"), Core::NumberType<uint32_t>(_config.ResourceCache.Value()).Text(), false);
@@ -1132,7 +1142,7 @@ namespace Plugin {
                 printf("ExternalTrigger: GibbonOEM_Started\n");
                 if (_netflix == nullptr) {
                     _netflix = netflix::nrdApp();
-
+                    SetDeviceCapabilities();
                     TRACE_L1("Netflix: %p", _netflix);
 
 #ifdef NETFLIX_VERSION_5
@@ -1215,6 +1225,7 @@ namespace Plugin {
         END_INTERFACE_MAP
 
     private:
+
         inline bool WaitForStateChange(netflix::Time& time, const PluginHost::IStateControl::command command)
         {
 
@@ -1257,6 +1268,14 @@ namespace Plugin {
 
             return result;
         }
+
+        void SetDeviceCapabilities()
+        {
+            if (_netflix != nullptr && _config.HasNetflixButton.IsSet()) {
+                _netflix->setDeviceCapability("hasNetflixButton", _config.HasNetflixButton.Value());
+            }
+        }
+
 #ifdef NETFLIX_VERSION_5 //Used this timed out function, since netflix5 is not providing wait/signaling function to the outside
         inline bool IsTimedOut(struct timeval start, netflix::Time& time)
         {
-- 
2.25.1


From c1740ba3e2bfc4cd8d0484740d992fba789cdc86 Mon Sep 17 00:00:00 2001
From: krp97 <k.plata@metrological.com>
Date: Wed, 4 May 2022 15:04:07 +0000
Subject: [PATCH] MCA patch for handling cookies in webkit plugin

---
 WebKitBrowser/WebKitImplementation.cpp | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)
 mode change 100644 => 100755 WebKitBrowser/WebKitImplementation.cpp

diff --git a/WebKitBrowser/WebKitImplementation.cpp b/WebKitBrowser/WebKitImplementation.cpp
old mode 100644
new mode 100755
index 19e49420..ad223ca7
--- a/WebKitBrowser/WebKitImplementation.cpp
+++ b/WebKitBrowser/WebKitImplementation.cpp
@@ -587,6 +587,11 @@ static GSourceFuncs _handlerIntervention =
             _URL = URL;
 
             TRACE(Trace::Information, (_T("New URL: %s"), _URL.c_str()));
+            TRACE(Trace::Information, (_T("MCA-DD :: Start of the accept cookie logic ")));
+            auto httpPolicy = kWKHTTPCookieAcceptPolicyAlways;
+            using SetHTTPCookieAcceptPolicyData = std::tuple<WebKitImplementation*, WKHTTPCookieAcceptPolicy>;
+            auto* data = new SetHTTPCookieAcceptPolicyData(this, httpPolicy);
+            TRACE(Trace::Information, (_T("MCA-DD :: Stage 1 accept cookie policy is ready ")));
 
             if (_context != nullptr) {
                 g_main_context_invoke(
@@ -603,6 +608,25 @@ static GSourceFuncs _handlerIntervention =
                         return FALSE;
                     },
                     this);
+                
+                g_main_context_invoke_full(
+                    _context,
+                    G_PRIORITY_DEFAULT,
+                    [](gpointer customdata) -> gboolean {
+                      auto& data = *static_cast<SetHTTPCookieAcceptPolicyData*>(customdata);
+                      WebKitImplementation* object = std::get<0>(data);
+                      WKHTTPCookieAcceptPolicy policy =  std::get<1>(data);
+                      auto context = WKPageGetContext(object->_page);
+                      auto manager = WKContextGetCookieManager(context);
+                      WKCookieManagerSetHTTPCookieAcceptPolicy(manager, policy);
+                    return G_SOURCE_REMOVE;
+                },
+                data,
+                [](gpointer customdata) {
+                    delete static_cast<SetHTTPCookieAcceptPolicyData*>(customdata);
+                });
+                      
+                TRACE(Trace::Information, (_T("MCA-DD :: END of Cookie setting is done  ")));
             }
         }
         virtual string GetURL() const
-- 
2.25.1

